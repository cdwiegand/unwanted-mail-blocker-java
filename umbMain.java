/*
 * umbMain.java
 *
 * Created on February 13, 2002, 11:14 AM
 */

/**
 *
 * @author  chris
 */
public class umbMain extends javax.swing.JFrame {
    
    /** Creates new form umbMain */
    public umbMain() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel51 = new javax.swing.JPanel();
        jPanel52 = new javax.swing.JPanel();
        jPanel53 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButton1.setText("Preferences");
        jPanel3.add(jButton1);

        jButton2.setText("Start / Stop");
        jPanel3.add(jButton2);

        jPanel1.add(jPanel3, java.awt.BorderLayout.SOUTH);

        jPanel9.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("UMB - Unwanted Mail Blocker v0.1");
        jPanel9.add(jLabel1, java.awt.BorderLayout.NORTH);

        jLabel2.setText("Copyright (c) 2002 by Christopher Wiegand of Aurora, Colorado, USA");
        jPanel9.add(jLabel2, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel9, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.add(jProgressBar1, java.awt.BorderLayout.NORTH);

        jLabel3.setText("...");
        jPanel2.add(jLabel3, java.awt.BorderLayout.SOUTH);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel5, java.awt.BorderLayout.WEST);

        getContentPane().add(jPanel51, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel52, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel53, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        if (args.length > 0) {
            int i = 0;
            for (i = 0; i < args.length; i = i + 1) {
                if (args[i].equalsIgnoreCase("--defaults")) {
                    java.util.prefs.Preferences prefs; // get prefs for THIS package
                    prefs = java.util.prefs.Preferences.userRoot().node("/Wiegand/UnwantedMailBlocker");
                    
                    prefs.put("Addresses","christopherwiegand@hotmail.com,test@wiegand.cx");
                    prefs.put("Profiles","Test Profile");
                    prefs.putBoolean("DebugLog",true);
                    prefs = prefs.node("Test Profile");
                    prefs.put("POP3Server","pop.server");
                    prefs.put("Username","username");
                    prefs.put("Password","hushitsasecret");
                    prefs.put("SMTPServer","daspost.myisp.es");
                } // if (args[i]
            } // for i
        } // if args.length
        
        new umbMain().show();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel53;
    private javax.swing.JPanel jPanel52;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    
    private void doStart() {
        // check all POP3 servers...
        java.util.ListIterator li;
        unwantedmailblocker.POPServer thePOP;
        
        // FIXME: eventually, I want a tab where we show current progress vs. errors.
        // FIXME: shouldn't this be a separate thread?
        li = thePrefs.llProfiles.listIterator(); // get list iterator
        while (li.hasNext()) { // while more items
            thePOP = (POPServer) li.next(); // convert to clsPOPServer
            try {
                int iMsg = 0;
                int iMsgCount = 0;
                EmailMsg theMail;
                thePOP.login(thePrefs,this); // try to login...
                addInfoLine("Logged into ".concat(thePOP.sPOPServer));
                addInfoLine("Messages: ".concat(new String().valueOf(thePOP.iMsgs)));
                
                // If, and only if, thePOP.iMsgs = -2, we weren't able to figure out how many
                // Try 999 and when we get an exception we know we're done...
                iMsgCount = thePOP.iMsgs;
                if (iMsgCount == -2) {
                    iMsgCount = 999;
                }
                if (iMsgCount > 0) {
                    // Now, retrieve each message... processing as we go.
                    for (iMsg = 1; iMsg <= iMsgCount; iMsg = iMsg + 1) {
                        try {
                            updateStatus(iMsg,iMsgCount);
                            theMail = thePOP.retrieveMsg(iMsg,thePrefs,this);
                            addInfoLine("Message: ".concat(theMail.sSubject));
                            addInfoLine("From: ".concat(theMail.sFrom));
                            addInfoLine("From 2: ".concat(theMail.sFrom2));
                            // Is it a recognized address?
                            if (isOKAddress(theMail,thePrefs)) {
                                addInfoLine("Known recipient - it's Ok");
                            } else {
                                // unknown...
                                addInfoLine("ARGH! MORE JUNK MAIL!!");
                            }
                            
                        } catch (Exception e) {
                            // Hmmm.... couldn't get it. Stop processing...
                            iMsg = iMsgCount + 1;
                        }
                    } // for iMsg
                } // if iMsgCount > 0
                thePOP.closeServer(thePrefs);
                
            } catch (Exception e2) {
                addInfoLine("Failed to login to POP3 server ".concat(thePOP.sPOPServer));
                addInfoLine(e2.getMessage());
            }
        }
        addInfoLine("Done!");
        jButton1.setText("Start");
    }
    
    /* FIXME
     *public void addInfoLine(String s) {
     *    theList.addElement(s);
     *    this.jList1.repaint();
     *    this.repaint();
     *}
     *
     *public void updateStatus(int iValue, int iMax) {
     *    this.jProgressBar1.setMaximum(iMax);
     *    this.jProgressBar1.setValue(iValue);
     *    this.jProgressBar1.repaint();
     *    this.repaint();
     *}
     */
    
    
}
